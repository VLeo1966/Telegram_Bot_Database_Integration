import requests
import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

from config import TOKEN2, WEATHER_API_KEY

import random

bot = Bot(token=TOKEN2)
dp = Dispatcher()


@dp.message(Command('photo'))
async def photo(message: Message):
        list = ['https://avatars.mds.yandex.net/i?id=1cf04a6f38f0be15415a0c35010d27a3c5e70e21-4318341-images-thumbs&n=13',
                'https://avatars.mds.yandex.net/i?id=2414e1a11e8ea018c07319af1c31604f93fa0baa-10165663-images-thumbs&n=13',
                'https://avatars.mds.yandex.net/i?id=423098ad090e0ab751f1ebeef408125a473db425-9283819-images-thumbs&n=13',
                'https://avatars.mds.yandex.net/i?id=a8ffc42530d11d373e07ff512a9e4a96a6562d79-12731000-images-thumbs&n=13']
        rand_photo = random.choice(list)
        await message.answer_photo(photo=rand_photo, caption='–≠—Ç–æ —Å—É–ø–µ—Ä –∫—Ä—É—Ç–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞')

@dp.message(F.photo)
async def react_photo(message: Message):
    list = ['–û–≥–æ, –∫–∞–∫–∞—è —Ñ–æ—Ç–∫–∞!', '–ù–µ–ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ', '–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ —Ç–∞–∫–æ–µ –±–æ–ª—å—à–µ']
    rand_answ = random.choice(list)
    await message.answer(rand_answ)
@dp.message(F.text == "–ß—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?")
async def aitext(message: Message):
    await message.answer('–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç ‚Äî —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ —Å—á–∏—Ç–∞—é—Ç—Å—è –ø—Ä–µ—Ä–æ–≥–∞—Ç–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫–∞; –Ω–∞—É–∫–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω, –æ—Å–æ–±–µ–Ω–Ω–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º')

@dp.message(Command('help'))
async def help(message: Message):
    await message.answer("–≠—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã: \n /start \n /help \n /weather –ú–æ—Å–∫–≤–∞")

@dp.message(CommandStart())
async def start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç–∏–∫–∏, —è –±–æ—Ç!")

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
class WeatherState(StatesGroup):
    waiting_for_city = State()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
def get_weather(city):
    url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ru"
    response = requests.get(url)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    if response.status_code == 200:
        data = response.json()
        city_name = data['name']
        weather_description = data['weather'][0]['description']
        temperature = data['main']['temp']
        humidity = data['main']['humidity']
        wind_speed = data['wind']['speed']
        return f"üèô –ì–æ—Ä–æ–¥: {city_name}\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C\n‚òÅ –û–ø–∏—Å–∞–Ω–∏–µ: {weather_description.capitalize()}\nüíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\nüí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å"
    else:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞."


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /weather
@dp.message(Command("weather"))
async def weather_command(message: Message, state: FSMContext):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
    await state.set_state(WeatherState.waiting_for_city)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞
@dp.message(WeatherState.waiting_for_city)
async def process_city_input(message: Message, state: FSMContext):
    city = message.text
    weather_info = get_weather(city)
    await message.answer(weather_info)
    await state.clear()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())